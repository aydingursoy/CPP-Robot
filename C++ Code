#pragma config(Sensor, S2, Garo , sensorEV3_Gyro)
#pragma config(Motor, motorB, motorLeft , tmotorEV3_Large , PIDControl , driveLeft , encoder)
#pragma config(Motor , motorC, motorRight , tmotorEV3_Large, PIDControl, driveRight , encoder)
//* Code automatically generated by 'ROBOTC' configuration wizard !
! //
/ 
Gyro Modes
0 - modeEV3Gyro_Angle
1 - modeEV3Gyro_Rate
2 - modeEV3Gyro_Fast
3 - modeEV3Gyro_RateAndAngle
4 - modeEV3Gyro_Calibration - not utilized 
task main()
{
 int x;
resetGyro(S2);
repeatUntil(getGyroDegrees(S2)>70) {
x = getGyroDegrees(S2);
displayTextLine(3, "Degrees: %d", x);
setMotorSpeed(motorLeft, 30);
setMotorSpeed(motorRight,0);
sleep(100);
}
repeatUntil (getGyroDegrees(S2)>90) {
x= getGyroDegrees(S2);
displayTextLine(3, "degrees:%d" , x);
setMotorSpeed(motorLeft, 10);
setMotorSpeed(motorRight,0);
sleep(100);
}
}
#pragma config(Sensor, S1 , 
touchSensor, SensorEV3_Touch)
#pragma config(Sensor, S2 , 
gyroSensor, SensorEV3_Gyro)
#pragma config(Sensor, S3 , 
colorSensor, SensorEV3_Color)
#pragma config(Sensor, S4 , 
sonarSensor, SensorEV3_Ultrasonic)
#pragma config(Motor, motorB, leftMotor, tmotorEV3_Large , PIDControl , encoder)
#pragma config(Motor , motorC, rightMotor, tmotorEV3_Large, PIDControl, encoder)
//* Code automatically generated by 'ROBOTC' configuration wizard !
! *//
task main)
()
{
setMotorSpeed(leftMotor, 20); // set the leftMotor to half power
setMotorSpeed(rightMotor, 20); // set the right motor to half power
sleep(2000);
setLEDColor(ledRedPulse);
sleep(2000);
setLEDColor(ledGreenPulse);
sleep(2000);
displayTextLine(3,"Hi");
sleep(2000);
if(getTouchValue(S1)==1)
 
displayTextLine(3, "PRESSED");
if(getTouchValue(S1)==0)
 
displayTextLine(3, "Not PRESSED");
sleep(2000);
for (int i= 1; i<=10 ; i++)
{
playSound(soundBeepBeep);
sleep(1000); }
while(true)
{ int currentDistance;
currentDistance = SensorValue[S4];
if(currentDistance < 5)
{
setMotorSpeed(leftMotor, -20);
setMotorSPeed(rightMotor, -20);
sleep(2000);
} 
else 
{
setMotorSpeed(leftMotor, 20);
setMotorSPeed(rightMotor, 20);
sleep(100);
}
}
